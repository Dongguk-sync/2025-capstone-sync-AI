# -*- coding: utf-8 -*-
"""sync_langchain_RAG.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YlXIJcG3ibWgNZpmn3FRlR8-UtzqT8lX

## 0. 환경 구성
"""

# !pip install -q langchain langchain-openai langchain_community tiktoken chromadb

import langchain

langchain.__version__

import os
from dotenv import load_dotenv

load_dotenv()

os.environ['OPENAI_API_KEY'] = os.getenv('SECRET_KEY')

"""### Step 1: 데이터 불러오기
- 웹페이지에서 데이터 가져오기


"""

# Data Loader - 웹페이지 데이터 가져오기
from langchain_community.document_loaders import WebBaseLoader

# 위키피디아 '판구조론'
url = 'https://ko.wikipedia.org/wiki/%ED%8C%90_%EA%B5%AC%EC%A1%B0%EB%A1%A0'
loader = WebBaseLoader(url)

# 웹페이지 텍스트 -> Documents
docs = loader.load()

print(len(docs))
print(len(docs[0].page_content))
print(docs[0].page_content[5000:6000])

"""### Step 2: Split texts"""

# Text Split (Documents -> small chunks: Documents)
from langchain.text_splitter import RecursiveCharacterTextSplitter

# 덩어리 사이즈 지정, 겹치는 영역 사이즈 지정
text_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=200)

# 문장의 끝까지 나눠줌. 문장이 중간에 끊겨 불러와지지 않도록 함
splits = text_splitter.split_documents(docs)

print(len(splits))
print(splits[10])

# page_content 속성
splits[10].page_content

# metadata 속성
splits[10].metadata

"""### Step 3: Indexing
벡터 DB에 Split된 text를 인덱싱해줌
"""

# Indexing (Texts -> Embedding -> Store)
from langchain_community.vectorstores import Chroma
from langchain_openai import OpenAIEmbeddings

# 벡터 db 생성
vectorstore = Chroma.from_documents(documents=splits,
                                    embedding=OpenAIEmbeddings())

# 벡터 db에서 특정 내용과 관련된 청크 가져오기
docs = vectorstore.similarity_search("판 구조론 정립과정")
print(len(docs))
print(docs[0].page_content)

"""### Step 4: Retrieval ~ Generation
벡터 DB에서 유사한 내용을 불러와 prompt에 포함시키기
"""

from langchain_openai import ChatOpenAI
from langchain_core.prompts import ChatPromptTemplate
from langchain_core.runnables import RunnablePassthrough
from langchain_core.output_parsers import StrOutputParser

template = '''
Provide feedback of <Review> based on <Context> that distinguishes between errors and omissions.
Format in Markdown and in Korean.


<Context>: {context}

<Review>: {input}
'''
prompt = ChatPromptTemplate.from_template(template)

retriever = vectorstore.as_retriever()

docs = vectorstore.similarity_search("{input}")

def format_docs(docs):
    return '\n\n'.join(doc.page_content for doc in docs)

rag_chain = (
    {'context': retriever | format_docs, 'input': RunnablePassthrough()}
    | prompt
    | model
    | StrOutputParser()
)
review = '''이번 수업은 판 구조론 정립 과정에 대해 정리해 보자. 판 구조로는 대륙 이동설, 멘틀 대류설, 해양저 확장설을 거치면서 완성되었다. 베게너가 주장한 대륙 이동설은 과거 모든 대륙이 모여 판게아라는 초대륙을 이루고 있었으며, 시간이 지나면서 판게아가 분리되고 이동하여 현재와 같은 대륙이 만들어졌다는 이론이다. 베게너는 남아메리카 동해안과 아프리카 서해안의 해안선이 일치하는 것과 서로 떨어진 여러 대륙에서 같은 종의 고생물 화석이 발견되는 것. 북아메리카와 유럽의 산맥 지질 구조가 연속적이고 여러 대륙의 빙하 흔적을 모으면 빙하의 흔적이 남극을 중심으로 분포하는 것을 대륙 이동설의 증거로 제시하였지만, 대륙이 움직이는 원동력을 제대로 설명하지 못해 대다수의 과학자들에게 인정받지 못했다. 홈스가 주장한 멘틀 대류설은 지구 중심부의 열에 의해 멘틀의 대류가 일어나고 멘틀 위에 떠 있는 대륙이 이동한다는 이론으로 이 역시 가설을 뒷받침할 수 있는 증거를 제시하지 못해 받아들여지지 않았다. 헤스와 디츠 두 과학자에 의해 발표된 해양저 확장설은 해령 아래에서 멘틀이 상승하여 새로운 해양 지각이 생성되면서 해양자가 확장된다는 이론이다. 해양저 확장설의 여러 증거들을 살펴보자. 첫 번째 증거는 고지자기 무늬의 대칭적 분포이다. 해량에서 지각이 생성될 때 광물은 당시 자기장의 방향으로 배열되고 해양 지각이 양옆으로 이동하면서 지구 자기장의 방향이 반대가 되면 새롭게 생성되는 지각의 광물은 반대 방향으로 좌화된다. 이 과정이 반복되면서 해령을 축으로 대칭적인 고지자기 줄무늬가 나타나게 되고, 이것은 해양전 확장설을 지지하는 강력한 증거가 된다. 두 번째 증거는 열곡과 변환 단층이 발견된다는 사실이다. 해양자가 확장하면서 해령의 중심부에 열곡이 만들어지고 해령의 위치에 따른 속도 차이에 의해 지각이 서로 어긋나는 변환 단층이 생성된다. 변환 단층에서는 지진이 자주 발생하지만 해령에서 멀리 떨어진 단열대에서는 지진이 발생하지 않는다. 세 번째 증거는 해양 지각의 나이와 해저 퇴적물의 두께이다. 해령 주변 해양 지각의 나이와 퇴적물의 두께를 측정하였더니 해령에서 멀어질수록 해양 지각의 나이는 많아지며 퇴적물의 두께는 두꺼워진다는 것을 발견하였고, 이 측정 자료는 해양저 확장설의 증거로 제시되었다. 마지막 증거는 섭입대 주변의 진원 깊이이다. 해구 부근의 지진은 섭입대를 따라 발생하는데 대륙 쪽으로 갈수록 진원의 깊이가 깊어진다는 사실을 발견하였고, 이것은 해양에서 생성된 해양 지각이 해구에서 소멸한다는 증거로 활용된다.'''
rag_chain.invoke(review)
